<?php
// $Id$

/**
 * @file
 * Contains hooks and other functions for the properties_autocomplete module.
 */

/**
 * Implements hook_field_attach_presave().
 */
function properties_autocomplete_field_attach_presave($entity_type, $entity) {
  $fields = field_info_instances($entity_type, field_extract_bundle($entity_type, $entity));
  $attributes = array();
  $categories = array();
  foreach ($fields as $field_name => $field) {
    $field_info = field_info_field_by_id($field['field_id']);
    if ($field_info['type'] == 'properties') {
      foreach ($entity->$field_name as $langcode => $items) {
        foreach ($items as $item) {
          $attributes[$langcode][$item['attribute']] = $item['attribute'];
          $categories[$langcode][$item['category']] = $item['category'];
        }
      }
    }
  }
}

/**
 * Implements hook_field_attach_form().
 */
function properties_autocomplete_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  $fields = field_info_instances($entity_type, field_extract_bundle($entity_type, $entity));
  foreach ($fields as $field_name => $field) {
    $field_info = field_info_field_by_id($field['field_id']);
    if ($field_info['type'] == 'properties') {
      foreach (element_children($form[$field_name][$langcode]) as $key) {
        if (is_int($key)) {
          $form[$field_name][$langcode][$key]['attribute']['#autocomplete_path'] = 'properties_autocomplete/attribute/' . $langcode;
          $form[$field_name][$langcode][$key]['category']['#autocomplete_path'] = 'properties_autocomplete/category/' . $langcode;
        }
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function properties_autocomplete_menu() {
  $items['properties_autocomplete/%/%'] = array(
    'title' => 'Properties autocomplete',
    'type' => MENU_CALLBACK,
    'page callback' => 'properties_autocomplete_js',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Page callback for autocomplete suggestions.
 */
function properties_autocomplete_js($type, $langcode, $string = NULL) {
  drupal_json_output((object) drupal_map_assoc(array('Attribute 1', 'Attribute 2')));
}